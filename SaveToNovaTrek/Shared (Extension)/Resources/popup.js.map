{
  "version": 3,
  "sources": ["../src/popup.ts"],
  "sourcesContent": ["// Popup script for NovaTrek Safari extension\n\n// Safari uses browser API instead of chrome API\ndeclare const browser: any;\nconst chrome =\n  typeof browser !== \"undefined\" ? browser : (window as any).chrome;\n\n// Configuration - Change for production\nconst BASE_URL = \"http://localhost:3000\"; // For production: 'https://novatrek.app'\n\ninterface SaveData {\n  url: string;\n  title: string;\n  notes?: string;\n  tags?: string[];\n  tripId?: string;\n}\n\n// DOM Elements\nconst loginView = document.getElementById(\"login-view\")!;\nconst mainView = document.getElementById(\"main-view\")!;\nconst successView = document.getElementById(\"success-view\")!;\n\nconst loginBtn = document.getElementById(\"login-btn\")!;\nconst saveBtn = document.getElementById(\"save-btn\")!;\nconst quickSaveBtn = document.getElementById(\"quick-save-btn\")!;\nconst logoutBtn = document.getElementById(\"logout\")!;\nconst openDashboardBtn = document.getElementById(\"open-dashboard\")!;\nconst viewInAppBtn = document.getElementById(\"view-in-app\")!;\nconst saveAnotherBtn = document.getElementById(\"save-another\")!;\n\nconst pageTitleEl = document.getElementById(\"page-title\")!;\nconst pageUrlEl = document.getElementById(\"page-url\")!;\nconst notesInput = document.getElementById(\"notes\") as HTMLTextAreaElement;\nconst tagsInput = document.getElementById(\"tags\") as HTMLInputElement;\nconst tripSelect = document.getElementById(\"trip-select\") as HTMLSelectElement;\n\n// Initialize popup\nasync function init() {\n  // Check auth status\n  const authStatus = await chrome.runtime.sendMessage({\n    action: \"getAuthStatus\",\n  });\n\n  if (authStatus.isAuthenticated) {\n    showMainView();\n    loadCurrentTab();\n    loadUserTrips();\n  } else {\n    showLoginView();\n  }\n}\n\n// Show different views\nfunction showLoginView() {\n  loginView.classList.remove(\"hidden\");\n  mainView.classList.add(\"hidden\");\n  successView.classList.add(\"hidden\");\n}\n\nfunction showMainView() {\n  loginView.classList.add(\"hidden\");\n  mainView.classList.remove(\"hidden\");\n  successView.classList.add(\"hidden\");\n}\n\nfunction showSuccessView() {\n  loginView.classList.add(\"hidden\");\n  mainView.classList.add(\"hidden\");\n  successView.classList.remove(\"hidden\");\n}\n\n// Load current tab info\nasync function loadCurrentTab() {\n  const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });\n\n  if (tab.title && tab.url) {\n    pageTitleEl.textContent = tab.title;\n    pageUrlEl.textContent = new URL(tab.url).hostname;\n  }\n}\n\n// Load user's trips\nasync function loadUserTrips() {\n  try {\n    const { authToken, userId } = await chrome.storage.local.get([\n      \"authToken\",\n      \"userId\",\n    ]);\n\n    if (!authToken) {\n      console.error(\"No auth token found\");\n      return;\n    }\n\n    // Clear existing options except the first one\n    while (tripSelect.options.length > 1) {\n      tripSelect.remove(1);\n    }\n\n    // Fetch trips from API\n    const response = await fetch(`${BASE_URL}/api/trips/list`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      const trips = data.trips || [];\n\n      if (trips.length === 0) {\n        const option = document.createElement(\"option\");\n        option.value = \"\";\n        option.textContent = \"No trips yet\";\n        option.disabled = true;\n        tripSelect.appendChild(option);\n      } else {\n        trips.forEach((trip: any) => {\n          const option = document.createElement(\"option\");\n          option.value = trip.id;\n          option.textContent = trip.name;\n          tripSelect.appendChild(option);\n        });\n      }\n    } else {\n      console.error(\"Failed to fetch trips:\", response.status);\n\n      // If token expired, clear storage and show login\n      if (response.status === 401 || response.status === 500) {\n        console.log(\"Token may be expired, clearing auth\");\n        await chrome.storage.local.remove([\"authToken\", \"userId\"]);\n        showLoginView();\n        return;\n      }\n\n      const option = document.createElement(\"option\");\n      option.value = \"\";\n      option.textContent = \"Failed to load trips\";\n      option.disabled = true;\n      tripSelect.appendChild(option);\n    }\n  } catch (error) {\n    console.error(\"Failed to load trips:\", error);\n    const option = document.createElement(\"option\");\n    option.value = \"\";\n    option.textContent = \"Error loading trips\";\n    option.disabled = true;\n    tripSelect.appendChild(option);\n  }\n}\n\n// Event Listeners\nloginBtn.addEventListener(\"click\", () => {\n  // Open NovaTrek login page\n  chrome.tabs.create({ url: `${BASE_URL}/login?from=extension` });\n  // Don't close the popup immediately - let it close naturally\n});\n\nsaveBtn.addEventListener(\"click\", async () => {\n  const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });\n\n  if (!tab.url || !tab.title) return;\n\n  // Show loading state\n  saveBtn.querySelector(\".btn-text\")!.classList.add(\"hidden\");\n  saveBtn.querySelector(\".spinner\")!.classList.remove(\"hidden\");\n  saveBtn.disabled = true;\n\n  const saveData: SaveData = {\n    url: tab.url,\n    title: tab.title,\n    notes: notesInput.value,\n    tags: tagsInput.value\n      .split(\",\")\n      .map((t) => t.trim())\n      .filter(Boolean),\n    tripId: tripSelect.value || undefined,\n  };\n\n  try {\n    await chrome.runtime.sendMessage({\n      action: \"save\",\n      data: saveData,\n    });\n\n    showSuccessView();\n  } catch (error) {\n    console.error(\"Save failed:\", error);\n    // Reset button\n    saveBtn.querySelector(\".btn-text\")!.classList.remove(\"hidden\");\n    saveBtn.querySelector(\".spinner\")!.classList.add(\"hidden\");\n    saveBtn.disabled = false;\n  }\n});\n\nquickSaveBtn.addEventListener(\"click\", async () => {\n  const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });\n\n  if (!tab.url || !tab.title) return;\n\n  await chrome.runtime.sendMessage({\n    action: \"save\",\n    data: {\n      url: tab.url,\n      title: tab.title,\n    },\n  });\n\n  window.close();\n});\n\nlogoutBtn.addEventListener(\"click\", async () => {\n  await chrome.storage.local.remove(\"authToken\");\n  showLoginView();\n});\n\nopenDashboardBtn.addEventListener(\"click\", () => {\n  chrome.tabs.create({ url: `${BASE_URL}/dashboard/captures` });\n  window.close();\n});\n\nviewInAppBtn.addEventListener(\"click\", () => {\n  chrome.tabs.create({ url: `${BASE_URL}/dashboard/captures` });\n  window.close();\n});\n\nsaveAnotherBtn.addEventListener(\"click\", () => {\n  // Reset form\n  notesInput.value = \"\";\n  tagsInput.value = \"\";\n  tripSelect.value = \"\";\n\n  showMainView();\n  loadCurrentTab();\n});\n\n// Listen for auth token from content script\nchrome.runtime.onMessage.addListener((request) => {\n  if (request.action === \"authTokenReceived\" && request.token) {\n    chrome.storage.local.set({\n      authToken: request.token,\n      userId: request.userId,\n    });\n    showMainView();\n    loadCurrentTab();\n    loadUserTrips();\n  }\n});\n\n// Listen for storage changes\nchrome.storage.onChanged.addListener((changes, namespace) => {\n  if (namespace === \"local\" && changes.authToken) {\n    init();\n  }\n});\n\n// Re-check auth when popup becomes visible\ndocument.addEventListener(\"visibilitychange\", () => {\n  if (!document.hidden) {\n    init();\n  }\n});\n\n// Initialize on load\ninit();\n"],
  "mappings": "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",
  "names": []
}
